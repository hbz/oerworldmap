GET     /                           controllers.LandingPage.get()
GET     /robots.txt                 controllers.Robots.get()
GET     /assets/i18n.js             controllers.I18n.get()
GET     /assets/json/context.json   controllers.Assets.at(path="/", file="context.json")
GET     /assets/*file               controllers.Assets.at(path="/public", file)
GET     /user/register              controllers.UserIndex.signup()
POST    /user/register              controllers.UserIndex.register()
GET     /user/verify                controllers.UserIndex.verify(token: String ?= null)
GET     /user/password              controllers.UserIndex.requestPassword()
POST    /user/password              controllers.UserIndex.sendPassword()
GET     /user/newsletter            controllers.UserIndex.newsletterSignup()
POST    /user/newsletter            controllers.UserIndex.newsletterRegister()
GET     /user/groups                controllers.UserIndex.editGroups()
POST    /user/groups                controllers.UserIndex.setGroups()
GET     /resource.:ext              controllers.ResourceIndex.list(q: String ?= "", from: Integer ?= 0, size: Integer ?= 9999, sort: String ?= null, list: Boolean ?= false, ext: String, iso3166: String ?= "")
GET     /resource/                  controllers.ResourceIndex.listDefault(q: String ?= "", from: Integer ?= 0, size: Integer ?= 9999, sort: String ?= null, list: Boolean ?= false, iso3166: String ?= "")
GET     /resource/:id.:ext          controllers.ResourceIndex.read(id: String, version: String ?= "HEAD", ext: String)
GET     /resource/:id               controllers.ResourceIndex.readDefault(id: String, version: String ?= "HEAD")
POST    /resource/                  controllers.ResourceIndex.addResource()
POST    /resource/:id               controllers.ResourceIndex.updateResource(id: String)
POST    /resource/:id/comment       controllers.ResourceIndex.commentResource(id: String)
POST    /resource/:id/like          controllers.ResourceIndex.likeResource(id: String)
POST    /import/                    controllers.ResourceIndex.importResources()
DELETE  /resource/:id               controllers.ResourceIndex.delete(id: String)
GET     /aggregation/               controllers.AggregationIndex.list()
GET     /feed/                      controllers.ResourceIndex.feed()
GET     /country/:iso3166.:ext      controllers.ResourceIndex.list(q: String ?= "", from: Integer ?= 0, size: Integer ?= 9999, sort: String ?= null, list: Boolean ?= false, ext: String, iso3166: String)
GET     /country/:iso3166           controllers.ResourceIndex.listDefault(q: String ?= "", from: Integer ?= 0, size: Integer ?= 9999, sort: String ?= null, list: Boolean ?= false, iso3166: String)
GET     /log/                       controllers.ResourceIndex.log(id: String = null)
GET     /log/:id                    controllers.ResourceIndex.log(id: String)
POST    /index/:id                  controllers.ResourceIndex.index(id: String)
GET     /sparql/query               controllers.Sparql.query(q: String ?= "")
GET     /sparql/update              controllers.Sparql.update(delete: String ?= "", insert: String ?= "", where: String ?= "")
POST    /sparql/patch               controllers.Sparql.patch()
GET     /label/:id                  controllers.ResourceIndex.label(id: String)
GET     /:page                      controllers.StaticPage.get(page: String)
